<UserControl x:Class="DesktopClientView.TabItems.PlayersList.PlayersListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DesktopClientView.TabItems.PlayersList"
            xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters ="clr-namespace:ViewCore.XamlConverters;assembly=ViewCore"
             mc:Ignorable="d" 
             xmlns:db="clr-namespace:BaseCore.DataBase;assembly=BaseCore"
             xmlns:filter="clr-namespace:BaseCore.PlayerFilter;assembly=BaseCore"
             d:DesignHeight="300" d:DesignWidth="1000">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewLoadedCmd}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <converters:CompetitionToStringConverterClass x:Key="CompetitionToStringConverter"/>
        <converters:BoolToSexConverterClass x:Key="BoolToSexConverter"/>
        <converters:RecordsRangeToTextConverterClass x:Key="RecordsRangeToTextConverter"/>
        <converters:DateToStringConverterClass x:Key="DateToStringConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Vertical">
            <TextBlock Margin="10" Text="Wybierz istniejące zawody" HorizontalAlignment="Center" FontSize="16"/>
            <ComboBox ItemsSource="{Binding CompetitionChoiceBase.Competitions}" SelectedItem="{Binding CompetitionChoiceBase.SelectedCompetition, UpdateSourceTrigger=PropertyChanged}" Width="200">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource CompetitionToStringConverter}, FallbackValue={}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
        <StackPanel Grid.Row="1">
            <TextBlock HorizontalAlignment="Center" Margin="0,10,0,10" FontSize="20" Text="Wyniki"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="125"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="0">
                    <Button Height="30" Command="{Binding PreviousPageCmd}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Image Source="pack://application:,,,/DesktopClientView;component/Images/LeftArrow.jpg"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <TextBlock Width="80" Text="{Binding RecordsRangeInfo, Converter={StaticResource RecordsRangeToTextConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Button Height="30" Command="{Binding NextPageCmd}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Image Source="pack://application:,,,/DesktopClientView;component/Images/RightArrow.jpg"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" >
                    <StackPanel Name="Filtering" Orientation="Vertical" HorizontalAlignment="Center" Grid.Row="1" Grid.Column="0">
                        <TextBlock Text="Filtrowanie" HorizontalAlignment="Center" FontSize="18"/>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Vertical" Margin="5">
                                <TextBlock Text="Ogólny" HorizontalAlignment="Center"/>
                                <TextBox Height="25" Width="100" Text="{Binding FilterGeneral, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Name="Sorting" Orientation="Vertical" Margin="30, 0" HorizontalAlignment="Center">
                        <TextBlock Text="Sortowanie" HorizontalAlignment="Center" FontSize="18"/>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Vertical" Margin="5">
                                <TextBlock Text="Kryterium" HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding Source={db:EnumBindingSource {x:Type filter:PlayerSort}}}" SelectedItem="{Binding SortCriteria, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="5">
                                <TextBlock Text="Kolejność" HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding Source={db:EnumBindingSource {x:Type db:SortOrderEnum}}}"  SelectedItem="{Binding SortOrder, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="5">
                                <TextBlock Text="Dystans" HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding DefinedDistances}" DisplayMemberPath="Name" SelectedItem="{Binding DistanceSortCriteria, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="5">
                                <TextBlock Text="Dodatkowe inf." HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding DefinedExtraPlayerInfo}" DisplayMemberPath="Name" SelectedItem="{Binding ExtraPlayerInfoSortCriteria, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="5">
                                <TextBlock Text="Kat. wiek." HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding DefinedAgeCategories}" DisplayMemberPath="Name" SelectedItem="{Binding AgeCategorySortCriteria, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                <!--<StackPanel  Orientation="Vertical" Grid.Column="2">

                    <Button Command="{Binding UpdateFullCategoriesCmd}" Margin="0,0, 10, 5" Height="37" Width="100">
                        <TextBlock TextWrapping="Wrap" FontSize="13" TextAlignment="Center" VerticalAlignment="Center">
                            Przelicz kategorie
                        </TextBlock>
                    </Button>
                    <Button Content="Przelicz miejsca" Command="{Binding UpdateRankingAllCmd}" Margin="0,3, 10, 3" Height="37" Width="100" FontSize="13"/>
                </StackPanel>-->
            </Grid>
        </StackPanel>
        <DataGrid x:Name="playerDataGrid" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Row="2"
                  ItemsSource="{Binding Players}" EnableRowVirtualization="True" AutoGenerateColumns="False"
                  ColumnWidth="*" SelectionMode="Extended" CanUserAddRows="False" >
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="distancePlaceColumn" Width="SizeToHeader" Header="M-ce Open" Binding="{Binding DistancePlaceNumber}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="categoryPlaceColumn" Width="SizeToHeader" Header="M-ce Kategoria" Binding="{Binding CategoryPlaceNumber}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="startNumberColumn" Width="SizeToHeader" Header="Numer" Binding="{Binding StartNumber}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="firstNameColumn"  Header="Imię" Binding="{Binding FirstName}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="lastNameColumn" Header="Nazwisko" Binding="{Binding LastName}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="distancedColumn"  Header="Dystans" Binding="{Binding Distance.Name}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="startTimeColumn" Header="Czas startu" Binding="{Binding StartTime}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="extraPlayerInfoColumn"  Header="Dodatkowe info" Binding="{Binding ExtraPlayerInfo.Name}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="teamColumn"  Header="Klub" Binding="{Binding Team}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="birthDateColumn" Header="Data urodzenia" Binding="{Binding BirthDate, Converter={StaticResource DateToStringConverter}}" IsReadOnly="True"/>
                <!--<DataGridTemplateColumn x:Name="birthDateColumn"  Header="Data urodzenia" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding BirthDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                <DataGridTextColumn x:Name="fullCategoryColumn" Header="kategoria" Binding="{Binding FullCategory}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="isMaleColumn" Width="SizeToHeader" Header="Płeć" Binding="{Binding IsMale, Converter={StaticResource BoolToSexConverter}}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="lapsCountColumn" Width="SizeToHeader" Header="Okrążenia" Binding="{Binding LapsCount}" IsReadOnly="True"/>
                <DataGridTextColumn x:Name="timeColumn"  Header="Czas" Binding="{Binding Time}" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</UserControl>
