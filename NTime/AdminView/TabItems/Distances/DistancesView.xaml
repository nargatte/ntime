<UserControl x:Class="AdminView.Distances.DistancesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:validation="clr-namespace:AdminView.Validation;assembly=ViewCore"
             xmlns:converters="clr-namespace:ViewCore.XamlConverters;assembly=ViewCore"
             xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:local="clr-namespace:AdminView.Distances"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:db="clr-namespace:BaseCore.DataBase;assembly=BaseCore"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="800"
             Width="800" MaxWidth="800">
    <UserControl.Resources>
        <converters:BoolToCollapsedConverterClass x:Key="boolToCollapsedConverter"/>
        <converters:GateToNumberConverterClass x:Key="gateToNumberConverter"/>
        <Style x:Key="MyHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="BurlyWood"/>
        </Style>
        <Style x:Key="TextBoxYellow" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="LightYellow"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxYellow}"/>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewLoadedCmd}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <ScrollViewer HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid HorizontalAlignment="Stretch" >
            <StackPanel Name="LeftColumn" Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center" >
                <Expander IsExpanded="True" Margin="0, 10, 0, 20" Background="#EEA">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Punkty pomiarowe" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <StackPanel Orientation="Vertical" Margin="0, 20">
                        <Button Content="Załaduj dane z plików" Margin="300, 0, 20, 20" Command="{Binding LoadLogsFromCSVsToDB}"></Button>
                        <StackPanel Name="AddingMeasurementPoint" Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Numer punktu"/>
                            <TextBox Name="newMeasurementPointNumberTB" Width="20" Margin="10, 0, 20, 0">
                                <Binding Path="NewGateNumber" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:IsNumber20Rule ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox>
                            <TextBlock Text="Nazwa punktu"/>
                            <TextBox  Name="newMeasurementPointNameTB" Width="100" Margin="10, 0, 20, 0">
                                <Binding Path="NewGateName" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:IsNotEmpty ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox>
                            <Button Command="{Binding AddMeasurementPointCmd}" Content="Dodaj punkt">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=newMeasurementPointNumberTB, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=newMeasurementPointNameTB, Path=(Validation.HasError)}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                        </StackPanel>
                        <ListView Name="Gates" ItemsSource="{Binding DefinedGates}" Margin="0, 10" >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StatusBar HorizontalAlignment="Stretch" Height="Auto">
                                        <StatusBarItem HorizontalAlignment="Left" Content="{Binding Number}"/>
                                        <StatusBarItem HorizontalAlignment="Left" Content="{Binding Name}"/>
                                        <StatusBarItem HorizontalAlignment="Right">
                                            <StackPanel Orientation="Vertical">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="Numer logu"/>
                                                    <TextBox Name="NewLogNumberButton" Width="30">
                                                        <Binding Path="NewLogNumber" UpdateSourceTrigger="PropertyChanged">
                                                            <Binding.ValidationRules>
                                                                <validation:IsNumber20Rule ValidatesOnTargetUpdated="True"/>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox>
                                                    <TextBlock Text="Ścieżka"/>
                                                    <TextBlock Text="{Binding NewLogDirectoryName}" Width="100"/>
                                                    <Button Command="{Binding AddLogCmd}">
                                                        Wybierz plik
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="IsEnabled" Value="False"/>
                                                                <Style.Triggers>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding ElementName=NewLogNumberButton, Path=(Validation.HasError)}" Value="false" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="IsEnabled" Value="True"/>
                                                                    </MultiDataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </StackPanel>
                                                <ListView Name="AddedLogs" ItemsSource="{Binding AssignedLogs}">
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <StatusBar HorizontalAlignment="Stretch" Height="Auto">
                                                                <StatusBarItem HorizontalAlignment="Left">
                                                                    <TextBlock Text="{Binding LogNumber}" Width="30"></TextBlock>
                                                                </StatusBarItem>
                                                                <StatusBarItem HorizontalAlignment="Left">
                                                                    <TextBox Text="{Binding Path}" IsReadOnly="True" Width="100"/>
                                                                </StatusBarItem>
                                                                <Button Command="{Binding DeleteLogCmd}">Usuń</Button>
                                                            </StatusBar>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                            </StackPanel>
                                        </StatusBarItem>
                                        <Button Command="{Binding DeleteMeasurementPointCmd}">Usuń</Button>
                                    </StatusBar>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <TextBlock HorizontalAlignment="Center" > Dystanse</TextBlock>
                        <StackPanel Name="NewDistance" Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Margin="5" > Nazwa</TextBlock>
                            <TextBox Name="newDistanceTB"  Margin="5" Width="100">
                                <Binding Path="NewDistanceName" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:IsNotEmpty ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox>
                            <Button Command="{Binding AddDistanceCmd}" Margin="5">
                                Dodaj
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=newDistanceTB, Path=(Validation.HasError)}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Expander>
                <DataGrid x:Name="distancesDataGrid" RowDetailsVisibilityMode="Visible" HorizontalAlignment="Stretch"
                  ItemsSource="{Binding Distances}" AutoGenerateColumns="False"
                  ColumnWidth="*" SelectionMode="Single" CanUserAddRows="False" Width="800" CanUserSortColumns="False">

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Nazwa" Binding="{Binding Name}" Width="*"/>
                        <DataGridTextColumn Header="Długość" Binding="{Binding Length}" Width="*"/>
                        <DataGridTemplateColumn Header="Typ" Width="*">
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox  ItemsSource="{Binding Source={db:EnumBindingSource {x:Type db:DistanceTypeEnum}}}"
                                              SelectedItem="{Binding DistanceType, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox  ItemsSource="{Binding Source={db:EnumBindingSource {x:Type db:DistanceTypeEnum}}}"
                                              SelectedItem="{Binding DistanceType, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridComboBoxColumn Header="Typ" SelectedValueBinding="{Binding DistanceType}"
                                                ItemsSource="{Binding Source={db:EnumBindingSource {x:Type db:DistanceTypeEnum}}}">
                            
                        </DataGridComboBoxColumn>-->
                        <DataGridTextColumn x:Name="gatesCountColumn" Header="Liczba bramek" Width="*" Binding="{Binding GatesCount, UpdateSourceTrigger=LostFocus,Mode=TwoWay}"  />
                        <DataGridTextColumn x:Name="lapsCountColumn" Header="Liczba okrążeń" Width="*" Binding="{Binding LapsCount, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                                            Visibility="{Binding IsLapsCountCollapsed, Converter={StaticResource boolToCollapsedConverter}, Mode=OneWay}" />

                        <DataGridTextColumn Header="Limit czasu" Binding="{Binding TimeLimit}"/>
                        <DataGridTemplateColumn Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Command="{Binding SaveDistanceCmd}">Zapisz</Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Command="{Binding DeleteDistanceCmd}" >Usuń</Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <ItemsControl ItemsSource="{Binding GatesOrderItems}" Background="LightGoldenrodYellow" >
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                                            <StackPanel Orientation="Vertical" Visibility="{Binding IsTimeCollapsed, Converter={StaticResource boolToCollapsedConverter}}" >
                                                <TextBlock Text="Czas"/>
                                                <TextBox Text="{Binding MinTimeBefore}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Text="Numer"/>
                                                <ComboBox Width="100"  ItemsSource="{Binding DefinedGates}" SelectedItem="{Binding Gate, UpdateSourceTrigger=PropertyChanged}">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock>
                                                                <TextBlock.Text>
                                                                    <MultiBinding StringFormat="{}{0}: {1}">
                                                                        <Binding Path="Number" />
                                                                        <Binding Path="Name" />
                                                                    </MultiBinding>
                                                                </TextBlock.Text>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </StackPanel>
                                            <!--</Expander>-->
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel></WrapPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
                </DataGrid>
            </StackPanel>
        </Grid>
    </ScrollViewer>
</UserControl>
